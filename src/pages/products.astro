---
import BaseLayout from "../layouts/BaseLayout.astro";
import { readFile } from "fs/promises";
import ProductsCard from "../components/products-card.astro";
import { GraphQLClient } from "graphql-request";

// Create a new GraphQL client with the Hygraph endpoint
const client = new GraphQLClient(import.meta.env.ASTRO_HYGRAPH_ENDPOINT);

// Fetch the data via the GraphQL query
const { products: assets }: { products: Array<IProductsData> } =
	await client.request<{
		products: Array<IProductsData>;
	}>(`
  query Products {
	products {
		product_id
		name
		price
        image {
            url
        }
	}
}
`);

const ProductsDataPath = new URL(
    "../../public/assets/jsondata/products.json",
    import.meta.url,
);
const ProductsDataBuffer = await readFile(ProductsDataPath);
const ProductsData: Array<IProductsData> = JSON.parse(
    ProductsDataBuffer.toString(),
) as Array<IProductsData>;

export interface IProductsData {
    id: number;
    name: string;
    price: number;
    image: string;
    details: string;
}
---

<BaseLayout>
    <div class="row">
        <div class="text-block-container">
            <h1 class="text-block-h2" style="text-align: center;margin-top:10vh;">OUR PRODUCTS</h1>
        </div>

        <div class="row p-0">
            <div class="col-sm-12 col-lg-8 offset-lg-2 d-flex justify-content-center">
                <div class="row d-flex justify-content-around cards-wrapper">
                    {
                        assets.map((data : IProductsData) => {
                            return (
                                <>
                                    <ProductsCard data={data} />
                                </>
                            );
                        })
                    }
                </div>
            </div>
        </div>
    </div>
</BaseLayout>
